graph = {'Oradea':['Zerind','Siblu'],
    'Zerind':['Arad','Oradea'],
    'Arad':['Siblu','Timisoara','Zerind'],
    'Timisoara':['Lugoj','Arad'],
   'Lugoj':['Mehedia','Timisoara'],
   'Mehedia':['Lugoj','Dobreta'],
   'Dobreta':['Mehedia','Cralova'],
   'Cralova':['Dobreta','Pitesti','Rimnicu Vilcea'],
    'Pitesti':['Bucharest','Rimnicu Vilcea','Cralova'],
   'Bucharest':['Pitesti','Glurglu','Pagaras','Urziceni'],
   'Pagaras':['Siblu','Bucharest'],
   'Siblu':['Pagaras','Rimnicu Vilcea','Arad','Oradea'],
   'Rimnicu Vilcea':['Pitesti','Siblu','Cralova'],
   'Urziceni':['Bucharest','Vaslul','Hirsova'],
    'Neamt':['Issl'],
   'Issl':['Neamt','Vaslul'],
   'Vaslul':['Issl','Urziceni'],
   'Hirsova':['Urziceni','Etorie'],
       'Glurglu':['Bucharest'],
       'Etorie':['Hirsova']
   }




def ids(start, destination):

    route = []
    visited = []
    limit = 0
    while not visited.__contains__(destination):
        route.append(start)
    
        countNode = 0
        countLimit = 0
        nodeInLevel = 1
    
        while len(route)>0:
            vertex = route.pop(len(route)-1)
            if vertex not in visited:
                visited.append(vertex)
                route.extend(set(graph[vertex]) - set(visited))
                countNode+=1
            if nodeInLevel == countNode:
                nodeInLevel = len(route)
                countNode = 0
                countLimit+=1
            if countLimit == limit:
                limit+=1
                countNode = 0
                countLimit = 0
                nodeInLevel = 1
                route = []
                visited = []
                continue;
            if visited.__contains__(destination):
                break;
            
    return visited




print("\n\nDepth Limited Search\n--------------------\n\n")
suru = input("Starting Point:  ")
if suru not in graph:
    print(suru+"does not exist\n\nStarting Point:  ");
    suru = input("Starting Point:  ")
    
ses = input("\n\nEnding Point:  ")
if ses not in graph:
    print(ses+"does not exist\n\nEnding Point Point:  ");
    ses = input()
    

v = ids(suru, ses)

print("\nThe Shortest Path from "+suru+" To "+ses+":  ")

j=0
for i in v:
    print(v[j])
    j+=1
